// Generated by andromda-angular cartridge (view\view.component.imp.ts.vsl) CAN EDIT!
import { Component, effect } from '@angular/core';
import { EditAccessPointTypeComponent } from '@app/view/access/type/edit-access-point-type.component';
import { EditAccessPointTypeVarsForm } from '@app/view/access/type/edit-access-point-type.component';
import { MatRadioChange } from '@angular/material/radio';
import { MatCheckboxChange } from '@angular/material/checkbox';
import { CommonModule } from '@angular/common';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { TranslateModule } from '@ngx-translate/core';
import { MaterialModule } from '@app/material.module';
import { CsvModule } from '@ctrl/ngx-csv';
import { TableComponent } from '@app/components/table/table.component';
import { LoaderComponent } from "@shared/loader/loader.component";

@Component({
  selector: 'app-edit-access-point-type',
  templateUrl: './edit-access-point-type.component.html',
  styleUrls: ['./edit-access-point-type.component.scss'],
  standalone: true,
  imports: [
    CommonModule,
    FormsModule,
    ReactiveFormsModule,
    TranslateModule,
    MaterialModule,
    CsvModule,
    TableComponent,
    LoaderComponent,
  ],
})
export class EditAccessPointTypeImplComponent extends EditAccessPointTypeComponent {

  constructor() {
    super();
    this.accessPointTypeApiStore.reset()
    this.success = this.accessPointTypeApiStore.success;
    this.loading = this.accessPointTypeApiStore.loading;
    this.error = this.accessPointTypeApiStore.error;
    this.messages = this.accessPointTypeApiStore.messages;

    effect(() => {
      let accessPoint = this.accessPointTypeApiStore.data();

      if (accessPoint) {
        this.accessPointTypeControl.patchValue(accessPoint);
      }
    });
  }

  override beforeOnInit(form: EditAccessPointTypeVarsForm): EditAccessPointTypeVarsForm {
    this.route.queryParams.subscribe((params: any) => {
      if (params.id) {
        this.accessPointTypeApiStore.findById(params);
      }
    });
    return form;
  }

  doNgOnDestroy(): void {
  }

  override beforeEditAccessPointTypeSave(form: any): void {

    let data = this.editAccessPointTypeForm.value;
    this.accessPointTypeApiStore.save(data);
  }
}
