// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { ModuleListVO } from '@app/model/bw/co/roguesystems/thutego/module/module-list-vo';
import { ModuleVO } from '@app/model/bw/co/roguesystems/thutego/module/module-vo';
import { HttpClient } from '@angular/common/http';
import { Page } from '@app/model/page.model';
import { SearchObject } from '@app/model/search-object';

@Injectable({
  providedIn: 'root'
})
export class ModuleApi {
    
    protected path = '/module';

    constructor(private http: HttpClient) {
    }

    public findById(id: number | any ): Observable<ModuleVO | any> {

        return this.http.get<ModuleVO | any>(this.path + `/${id}`);

    }

    public findModuleTopics(moduleId: number | any ): Observable<ModuleListVO | any> {

        return this.http.get<ModuleListVO | any>(this.path + `/module/${moduleId}`);

    }

    public getAll(): Observable<ModuleListVO[] | any[]> {

        return this.http.get<ModuleListVO[] | any[]>(this.path);

    }

    public remove(id: number | any ): Observable<boolean | any> {

        return this.http.delete<boolean | any>(this.path + `/${id}`);

    }

    public save(module: ModuleVO | any ): Observable<ModuleVO | any> {

        return this.http.post<ModuleVO | any>(this.path, module);

    }

    public search(criteria: SearchObject<ModuleSearchCriteria> | any ): Observable<ModuleListVO[] | any[]> {

        return this.http.get<ModuleListVO[] | any[]>(this.path + `/search`);

    }

}
