// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.co.roguesystems.thutego.curriculum.field;

import bw.co.roguesystems.thutego.curriculum.CurriculumRepository;
import bw.co.roguesystems.thutego.curriculum.field.LearningField;
import bw.co.roguesystems.thutego.curriculum.field.LearningFieldDaoBase;
import bw.co.roguesystems.thutego.curriculum.field.LearningFieldRepository;
import bw.co.roguesystems.thutego.curriculum.field.LearningFieldVO;

import org.springframework.stereotype.Repository;

/**
 * @see LearningField
 */
@Repository("learningFieldDao")
public class LearningFieldDaoImpl
    extends LearningFieldDaoBase
{
    
    public LearningFieldDaoImpl(
        CurriculumRepository curriculumRepository,
        LearningFieldRepository learningFieldRepository
    ) {

        super(
            curriculumRepository,
            learningFieldRepository
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void toLearningFieldVO(
        LearningField source,
        LearningFieldVO target)
    {
        // TODO verify behavior of toLearningFieldVO
        super.toLearningFieldVO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LearningFieldVO toLearningFieldVO(final LearningField entity)
    {
        // TODO verify behavior of toLearningFieldVO
        return super.toLearningFieldVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private LearningField loadLearningFieldFromLearningFieldVO(LearningFieldVO learningFieldVO)
    {
        if (learningFieldVO.getId() == null)
        {
            return  LearningField.Factory.newInstance();
        }
        else
        {
            return this.load(learningFieldVO.getId());
        }
    }

    /**
     * {@inheritDoc}
     */
    public LearningField learningFieldVOToEntity(LearningFieldVO learningFieldVO)
    {
        // TODO verify behavior of learningFieldVOToEntity
        LearningField entity = this.loadLearningFieldFromLearningFieldVO(learningFieldVO);
        this.learningFieldVOToEntity(learningFieldVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void learningFieldVOToEntity(
        LearningFieldVO source,
        LearningField target,
        boolean copyIfNull)
    {
        // TODO verify behavior of learningFieldVOToEntity
        super.learningFieldVOToEntity(source, target, copyIfNull);
    }
}