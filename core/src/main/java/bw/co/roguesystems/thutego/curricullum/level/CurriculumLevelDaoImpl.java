// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.co.roguesystems.thutego.curricullum.level;

import bw.co.roguesystems.thutego.curricullum.CurriculumListVO;
import bw.co.roguesystems.thutego.curricullum.CurriculumVO;
import org.springframework.stereotype.Repository;

/**
 * @see CurriculumLevel
 */
@Repository("curriculumLevelDao")
public class CurriculumLevelDaoImpl
    extends CurriculumLevelDaoBase
{
    
    public CurriculumLevelDaoImpl(
        CurriculumLevelRepository curriculumLevelRepository
    ) {

        super(
            curriculumLevelRepository
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void toCurriculumLevelVO(
        CurriculumLevel source,
        CurriculumLevelVO target)
    {
        // TODO verify behavior of toCurriculumLevelVO
        super.toCurriculumLevelVO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurriculumLevelVO toCurriculumLevelVO(final CurriculumLevel entity)
    {
        // TODO verify behavior of toCurriculumLevelVO
        return super.toCurriculumLevelVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private CurriculumLevel loadCurriculumLevelFromCurriculumLevelVO(CurriculumLevelVO curriculumLevelVO)
    {
        // TODO implement loadCurriculumLevelFromCurriculumLevelVO
        throw new UnsupportedOperationException("bw.co.roguesystems.thutego.curricullum.level.loadCurriculumLevelFromCurriculumLevelVO(CurriculumLevelVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (curriculumLevelVO.getId() == null)
        {
            return  CurriculumLevel.Factory.newInstance();
        }
        else
        {
            return this.load(curriculumLevelVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public CurriculumLevel curriculumLevelVOToEntity(CurriculumLevelVO curriculumLevelVO)
    {
        // TODO verify behavior of curriculumLevelVOToEntity
        CurriculumLevel entity = this.loadCurriculumLevelFromCurriculumLevelVO(curriculumLevelVO);
        this.curriculumLevelVOToEntity(curriculumLevelVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void curriculumLevelVOToEntity(
        CurriculumLevelVO source,
        CurriculumLevel target,
        boolean copyIfNull)
    {
        // TODO verify behavior of curriculumLevelVOToEntity
        super.curriculumLevelVOToEntity(source, target, copyIfNull);
    }
    /**
     * {@inheritDoc}
     */
    @Override
    public void toCurriculumVO(
        CurriculumLevel source,
        CurriculumVO target)
    {
        // TODO verify behavior of toCurriculumVO
        super.toCurriculumVO(source, target);
        // WARNING! No conversion for target.level (can't convert source.getLevel():java.lang.String to CurriculumLevelVO
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurriculumVO toCurriculumVO(final CurriculumLevel entity)
    {
        // TODO verify behavior of toCurriculumVO
        return super.toCurriculumVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private CurriculumLevel loadCurriculumLevelFromCurriculumVO(CurriculumVO curriculumVO)
    {
        // TODO implement loadCurriculumLevelFromCurriculumVO
        throw new UnsupportedOperationException("bw.co.roguesystems.thutego.curricullum.level.loadCurriculumLevelFromCurriculumVO(CurriculumVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (curriculumVO.getId() == null)
        {
            return  CurriculumLevel.Factory.newInstance();
        }
        else
        {
            return this.load(curriculumVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public CurriculumLevel curriculumVOToEntity(CurriculumVO curriculumVO)
    {
        // TODO verify behavior of curriculumVOToEntity
        CurriculumLevel entity = this.loadCurriculumLevelFromCurriculumVO(curriculumVO);
        this.curriculumVOToEntity(curriculumVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void curriculumVOToEntity(
        CurriculumVO source,
        CurriculumLevel target,
        boolean copyIfNull)
    {
        // TODO verify behavior of curriculumVOToEntity
        super.curriculumVOToEntity(source, target, copyIfNull);
        // No conversion for target.level (can't convert source.getLevel():CurriculumLevelVO to java.lang.String
    }
    /**
     * {@inheritDoc}
     */
    @Override
    public void toCurriculumListVO(
        CurriculumLevel source,
        CurriculumListVO target)
    {
        // TODO verify behavior of toCurriculumListVO
        super.toCurriculumListVO(source, target);
        // WARNING! No conversion for target.level (can't convert source.getLevel():java.lang.String to CurriculumLevelVO
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurriculumListVO toCurriculumListVO(final CurriculumLevel entity)
    {
        // TODO verify behavior of toCurriculumListVO
        return super.toCurriculumListVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private CurriculumLevel loadCurriculumLevelFromCurriculumListVO(CurriculumListVO curriculumListVO)
    {
        // TODO implement loadCurriculumLevelFromCurriculumListVO
        throw new UnsupportedOperationException("bw.co.roguesystems.thutego.curricullum.level.loadCurriculumLevelFromCurriculumListVO(CurriculumListVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (curriculumListVO.getId() == null)
        {
            return  CurriculumLevel.Factory.newInstance();
        }
        else
        {
            return this.load(curriculumListVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public CurriculumLevel curriculumListVOToEntity(CurriculumListVO curriculumListVO)
    {
        // TODO verify behavior of curriculumListVOToEntity
        CurriculumLevel entity = this.loadCurriculumLevelFromCurriculumListVO(curriculumListVO);
        this.curriculumListVOToEntity(curriculumListVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void curriculumListVOToEntity(
        CurriculumListVO source,
        CurriculumLevel target,
        boolean copyIfNull)
    {
        // TODO verify behavior of curriculumListVOToEntity
        super.curriculumListVOToEntity(source, target, copyIfNull);
        // No conversion for target.level (can't convert source.getLevel():CurriculumLevelVO to java.lang.String
    }
}