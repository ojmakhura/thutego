// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.co.roguesystems.thutego.module;

import bw.co.roguesystems.thutego.curricullum.CurricullumRepository;
import bw.co.roguesystems.thutego.module.outcome.LearningOutcomeRepository;
import org.springframework.stereotype.Repository;

/**
 * @see Module
 */
@Repository("moduleDao")
public class ModuleDaoImpl
    extends ModuleDaoBase
{
    
    public ModuleDaoImpl(
        LearningOutcomeRepository learningOutcomeRepository,
        CurricullumRepository curricullumRepository,
        ModuleRepository moduleRepository
    ) {

        super(
            learningOutcomeRepository,
            curricullumRepository,
            moduleRepository
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void toModuleVO(
        Module source,
        ModuleVO target)
    {
        // TODO verify behavior of toModuleVO
        super.toModuleVO(source, target);
        // WARNING! No conversion for target.learningOutcomes (can't convert source.getLearningOutcomes():bw.co.roguesystems.thutego.module.outcome.LearningOutcome to bw.co.roguesystems.thutego.module.outcome.LearningOutcomeVO
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ModuleVO toModuleVO(final Module entity)
    {
        // TODO verify behavior of toModuleVO
        return super.toModuleVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Module loadModuleFromModuleVO(ModuleVO moduleVO)
    {
        // TODO implement loadModuleFromModuleVO
        throw new UnsupportedOperationException("bw.co.roguesystems.thutego.module.loadModuleFromModuleVO(ModuleVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (moduleVO.getId() == null)
        {
            return  Module.Factory.newInstance();
        }
        else
        {
            return this.load(moduleVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public Module moduleVOToEntity(ModuleVO moduleVO)
    {
        // TODO verify behavior of moduleVOToEntity
        Module entity = this.loadModuleFromModuleVO(moduleVO);
        this.moduleVOToEntity(moduleVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void moduleVOToEntity(
        ModuleVO source,
        Module target,
        boolean copyIfNull)
    {
        // TODO verify behavior of moduleVOToEntity
        super.moduleVOToEntity(source, target, copyIfNull);
    }
    /**
     * {@inheritDoc}
     */
    @Override
    public void toModuleListVO(
        Module source,
        ModuleListVO target)
    {
        // TODO verify behavior of toModuleListVO
        super.toModuleListVO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ModuleListVO toModuleListVO(final Module entity)
    {
        // TODO verify behavior of toModuleListVO
        return super.toModuleListVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Module loadModuleFromModuleListVO(ModuleListVO moduleListVO)
    {
        // TODO implement loadModuleFromModuleListVO
        throw new UnsupportedOperationException("bw.co.roguesystems.thutego.module.loadModuleFromModuleListVO(ModuleListVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (moduleListVO.getId() == null)
        {
            return  Module.Factory.newInstance();
        }
        else
        {
            return this.load(moduleListVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public Module moduleListVOToEntity(ModuleListVO moduleListVO)
    {
        // TODO verify behavior of moduleListVOToEntity
        Module entity = this.loadModuleFromModuleListVO(moduleListVO);
        this.moduleListVOToEntity(moduleListVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void moduleListVOToEntity(
        ModuleListVO source,
        Module target,
        boolean copyIfNull)
    {
        // TODO verify behavior of moduleListVOToEntity
        super.moduleListVOToEntity(source, target, copyIfNull);
    }
}