// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.co.roguesystems.thutego.module.topic;

import bw.co.roguesystems.thutego.module.outcome.LearningOutcomeRepository;
import org.springframework.stereotype.Repository;

/**
 * @see Topic
 */
@Repository("topicDao")
public class TopicDaoImpl
    extends TopicDaoBase
{
    
    public TopicDaoImpl(
        LearningOutcomeRepository learningOutcomeRepository,
        TopicRepository topicRepository
    ) {

        super(
            learningOutcomeRepository,
            topicRepository
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void toTopicVO(
        Topic source,
        TopicVO target)
    {
        // TODO verify behavior of toTopicVO
        super.toTopicVO(source, target);
        // WARNING! No conversion for target.learningOutcome (can't convert source.getLearningOutcome():bw.co.roguesystems.thutego.module.outcome.LearningOutcome to bw.co.roguesystems.thutego.module.outcome.LearningOutcomeVO
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TopicVO toTopicVO(final Topic entity)
    {
        // TODO verify behavior of toTopicVO
        return super.toTopicVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Topic loadTopicFromTopicVO(TopicVO topicVO)
    {
        // TODO implement loadTopicFromTopicVO
        throw new UnsupportedOperationException("bw.co.roguesystems.thutego.module.topic.loadTopicFromTopicVO(TopicVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (topicVO.getId() == null)
        {
            return  Topic.Factory.newInstance();
        }
        else
        {
            return this.load(topicVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public Topic topicVOToEntity(TopicVO topicVO)
    {
        // TODO verify behavior of topicVOToEntity
        Topic entity = this.loadTopicFromTopicVO(topicVO);
        this.topicVOToEntity(topicVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void topicVOToEntity(
        TopicVO source,
        Topic target,
        boolean copyIfNull)
    {
        // TODO verify behavior of topicVOToEntity
        super.topicVOToEntity(source, target, copyIfNull);
    }
}