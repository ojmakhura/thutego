// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.co.roguesystems.thutego.curricullum.outcome;

import bw.co.roguesystems.thutego.curricullum.CurricullumRepository;
import org.springframework.stereotype.Repository;

/**
 * @see ExitLevelOutcome
 */
@Repository("exitLevelOutcomeDao")
public class ExitLevelOutcomeDaoImpl
    extends ExitLevelOutcomeDaoBase
{
    
    public ExitLevelOutcomeDaoImpl(
        CurricullumRepository curricullumRepository,
        ExitLevelOutcomeRepository exitLevelOutcomeRepository
    ) {

        super(
            curricullumRepository,
            exitLevelOutcomeRepository
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void toExitLevelOutcomeVO(
        ExitLevelOutcome source,
        ExitLevelOutcomeVO target)
    {
        // TODO verify behavior of toExitLevelOutcomeVO
        super.toExitLevelOutcomeVO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExitLevelOutcomeVO toExitLevelOutcomeVO(final ExitLevelOutcome entity)
    {
        // TODO verify behavior of toExitLevelOutcomeVO
        return super.toExitLevelOutcomeVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private ExitLevelOutcome loadExitLevelOutcomeFromExitLevelOutcomeVO(ExitLevelOutcomeVO exitLevelOutcomeVO)
    {
        // TODO implement loadExitLevelOutcomeFromExitLevelOutcomeVO
        throw new UnsupportedOperationException("bw.co.roguesystems.thutego.curricullum.outcome.loadExitLevelOutcomeFromExitLevelOutcomeVO(ExitLevelOutcomeVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (exitLevelOutcomeVO.getId() == null)
        {
            return  ExitLevelOutcome.Factory.newInstance();
        }
        else
        {
            return this.load(exitLevelOutcomeVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public ExitLevelOutcome exitLevelOutcomeVOToEntity(ExitLevelOutcomeVO exitLevelOutcomeVO)
    {
        // TODO verify behavior of exitLevelOutcomeVOToEntity
        ExitLevelOutcome entity = this.loadExitLevelOutcomeFromExitLevelOutcomeVO(exitLevelOutcomeVO);
        this.exitLevelOutcomeVOToEntity(exitLevelOutcomeVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void exitLevelOutcomeVOToEntity(
        ExitLevelOutcomeVO source,
        ExitLevelOutcome target,
        boolean copyIfNull)
    {
        // TODO verify behavior of exitLevelOutcomeVOToEntity
        super.exitLevelOutcomeVOToEntity(source, target, copyIfNull);
    }
}